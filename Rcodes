#Change (class)
P2Ptest$P2PtestMSISDN<-as.character(P2Ptest$P2PtestMSISDN)

#replace na to blanks or other value
df[is.na(df)] <- ""
df[df == "NA"] <- ""
#skip columns
read.csv(file = "result1", sep = " ")[ ,1:2]
#Remove "-"Sign
dailyP2M$DEST_COMM1 <- abs(dailyP2M$DEST_COMM1)
#Delete rows with conditions
d<-d[!(d$A=="B" & d$E==0),]

#Remove Rfd txn from dailymerchant
dailyP2m <- dailyP2M[dailyP2M$DATA_TXN_RFND!="True",]

#Remove android from OS column
CustList<- CustList[!(CustList$OS=="android"),]

#Change class
df$Year <- as.numeric(df$Year) 
df$Session <- as.numeric(df$Session)

#Split colunms
mrewards<- separate(data=mrewards, col="Create Date", into=c("date", "time"), sep=" ")
mrewards$date<-as.Date(mrewards$date,format = "%d-%m-%Y")


#Categorize data range
Must Import data first
library(readxl)

Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT<= 10]="<=10"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>10 & Login_Nov$ï..LOGIN_COUNT <= 20]="<=20"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>20 & Login_Nov$ï..LOGIN_COUNT <= 30]="<=30"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>30 & Login_Nov$ï..LOGIN_COUNT <= 40]="<=40"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>40 & Login_Nov$ï..LOGIN_COUNT <= 50]="<=50"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT> 50]=">50"
write.csv(Login_Nov, file ="C:/Users/CP666383/Desktop/Work Work Work/Request/Lena/Arthur CEO/Nov_Login_Count_Cat.csv")

Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>50 & Login_Nov$ï..LOGIN_COUNT <= 30]="<=30"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>60 & Login_Nov$ï..LOGIN_COUNT <= 30]="<=30"
Login_Nov$ï..LOGIN_COUNTcat[Login_Nov$ï..LOGIN_COUNT>70 & Login_Nov$ï..LOGIN_COUNT <= 30]="<=30"
#Pulling of data containing certain conditions in column
Login <- subset(MTD_Users, Type == "Login")



#Replacing Text or numbers in a string/Column, by conditions in that, or other columns
library(data.table)
	
DT = as.data.table(df)
DT[b==0, est := (a-5)/2.533]

#Replacing date time stamp with just dates only
MGM$Sign.up.Date.of.Referee<-as.Date(MGM$Sign.up.Date.of.Referee,format = "%d/%m/%Y")
MGM$Transaction.Date<-as.Date(MGM$Transaction.Date,format = "%d/%m/%Y")


#MGM$Validation <- "No"
MGM$Validation[which(MGM$Sign.up.Date.of.Referee==MGM$Transaction.Date)]<-"Yes"
MGM$Validation <-ifelse(MGM$Sign.up.Date.of.Referee==MGM$Transaction.Date,"Yes","No")





